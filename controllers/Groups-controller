const { Clients, Groups } = require('../models');

const groupsController = {

  getAllGroups(req, res) {
    Groups.find({})
         .select('-__v -Groups')
         .sort({ _id: -1 })
         .then(dbGroupsData => res.json(dbGroupsData))
         .catch(err => {
         console.log(err);
         res.sendStatus(400);
    });  
},


// get one Group by id
getgroupsById({ params }, res) {
    Groups.findOne({ _id: params.id })
         .populate({
         path: 'Clients',
         select: '-__v'
      })
         .select('-__v')
         .then(dbGroupsData => res.json(dbGroupsData))
         .catch(err => {
         console.log(err);
         res.sendStatus(400);
      });
  },
  // add Client to a group
  addClient({ params, body }, res) {
    console.log(params);
    Groups.create(body)
      .then(({ _id }) => {
        return Clients.findOneAndUpdate(
          { _id: params.ClientsId },
          { $push: { Groups: _id } },
          { new: true }
        );
      })
      .then(dbClientsData => {
        console.log(dbClientsData);
        if (!dbClientsData) {
          res.status(404).json({ message: 'No client found with this id!' });
          return;
        }
        res.json(dbClientsData);
      })
      .catch(err => res.json(err));
  },


  // remove client
  removeClients({ params }, res) {
    Clients.findOneAndDelete({ _id: params.commentId })
      .then(deletedComment => {
        if (!deletedComment) {
          return res.status(404).json({ message: 'No comment with this id!' });
        }
        return Clients.findOneAndUpdate(
          { _id: params.clientsId },
          { $pull: { comments: params.commentId } },
          { new: true }
        );
      })
      .then(dbClientsData => {
        if (!dbClientsData) {
          res.status(404).json({ message: 'No Client found with this id!' });
          return;
        }
        res.json(dbClientsData);
      })
      .catch(err => res.json(err));
  },
}

module.exports = groupsController;